{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js\";\nimport React from 'react';\nimport ScoreChart from './ScoreChart';\n\nclass ScoreCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.date = new Date(this.props.created_at);\n    this.showDate = this.date.getMonth() + 1 + '-' + this.date.getDate() + '-' + this.date.getFullYear();\n  }\n\n  render() {\n    if (this.props.game_type === \"Quiz\") {\n      this.noticeQuiz = `On ${this.showDate}, you got ${(this.props.score / 5 * 100).toFixed(2)}% correct in the ${this.props.game_type} game.`;\n    } else if (this.props.game_type === \"Alphabet\") {\n      this.noticeAlpha = `On ${this.showDate}, you got ${(this.props.score / 26 * 100).toFixed(2)}% correct in the ${this.props.game_type} game.`;\n    } else if (this.props.game_type === \"Puzzle\") {\n      this.noticePuz = `On ${this.showDate}, you completed the ${this.props.game_type} game in ${this.props.score} seconds.`;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notice-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, this.noticeQuiz), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, this.noticeAlpha), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, this.noticePuz)));\n  }\n\n}\n\nexport default ScoreCard; // if(props.game_type === \"Quiz\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Alphabet\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Puzzle\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js"],"names":["React","ScoreChart","ScoreCard","Component","date","Date","props","created_at","showDate","getMonth","getDate","getFullYear","render","game_type","noticeQuiz","score","toFixed","noticeAlpha","noticePuz"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,IAFoC,GAE7B,IAAIC,IAAJ,CAAS,KAAMC,KAAN,CAAYC,UAArB,CAF6B;AAAA,SAGpCC,QAHoC,GAGvB,KAAKJ,IAAL,CAAUK,QAAV,KAAqB,CAAtB,GAA2B,GAA3B,GAAgC,KAAKL,IAAL,CAAUM,OAAV,EAAhC,GAAsD,GAAtD,GAA4D,KAAKN,IAAL,CAAUO,WAAV,EAHpC;AAAA;;AAQpCC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKN,KAAL,CAAWO,SAAX,KAAyB,MAA5B,EAAmC;AAC/B,WAAKC,UAAL,GAAmB,MAAK,KAAKN,QAAS,aAAY,CAAE,KAAKF,KAAL,CAAWS,KAAX,GAAiB,CAAlB,GAAqB,GAAtB,EAA2BC,OAA3B,CAAmC,CAAnC,CAAsC,oBAAmB,KAAKV,KAAL,CAAWO,SAAU,QAAhI;AACH,KAFD,MAEM,IAAG,KAAKP,KAAL,CAAWO,SAAX,KAAyB,UAA5B,EAAuC;AACzC,WAAKI,WAAL,GAAoB,MAAK,KAAKT,QAAS,aAAY,CAAE,KAAKF,KAAL,CAAWS,KAAX,GAAiB,EAAlB,GAAsB,GAAvB,EAA4BC,OAA5B,CAAoC,CAApC,CAAuC,oBAAmB,KAAKV,KAAL,CAAWO,SAAU,QAAlI;AACH,KAFK,MAEA,IAAG,KAAKP,KAAL,CAAWO,SAAX,KAAyB,QAA5B,EAAqC;AACvC,WAAKK,SAAL,GAAkB,MAAK,KAAKV,QAAS,uBAAsB,KAAKF,KAAL,CAAWO,SAAU,YAAW,KAAKP,KAAL,CAAWS,KAAM,WAA5G;AACH;;AACD,wBACI,uDACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKD,UAA/B,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKG,WAA/B,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKC,SAA/B,CAHJ,CADJ,CADJ;AASH;;AAzBmC;;AA6BxC,eAAehB,SAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport ScoreChart from './ScoreChart'\n\nclass ScoreCard extends React.Component {\n\n    date = new Date(this. props.created_at);\n    showDate =  (this.date.getMonth()+1) + '-'+ this.date.getDate() + '-' + this.date.getFullYear()\n    noticeQuiz\n    noticeAlpha\n    noticePuz\n\n    render(){\n        if(this.props.game_type === \"Quiz\"){\n            this.noticeQuiz = `On ${this.showDate}, you got ${((this.props.score/5)*100).toFixed(2)}% correct in the ${this.props.game_type} game.`\n        }else if(this.props.game_type === \"Alphabet\"){\n            this.noticeAlpha = `On ${this.showDate}, you got ${((this.props.score/26)*100).toFixed(2)}% correct in the ${this.props.game_type} game.`\n        }else if(this.props.game_type === \"Puzzle\"){\n            this.noticePuz = `On ${this.showDate}, you completed the ${this.props.game_type} game in ${this.props.score} seconds.`\n        }\n        return(\n            <>\n                <div className=\"notice-container\">\n                    <div className=\"notices\">{this.noticeQuiz}</div>\n                    <div className=\"notices\">{this.noticeAlpha}</div>\n                    <div className=\"notices\">{this.noticePuz}</div>\n                </div>\n            </>\n    )\n    }\n\n}\n\nexport default ScoreCard\n\n\n    // if(props.game_type === \"Quiz\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Alphabet\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Puzzle\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }"]},"metadata":{},"sourceType":"module"}