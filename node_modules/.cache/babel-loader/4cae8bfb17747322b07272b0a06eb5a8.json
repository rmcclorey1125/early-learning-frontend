{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/FlashcardContainer.js\";\nimport React from 'react';\nimport Flashcard from './Flashcard';\nimport FlashcardModal from './FlashcardModal';\nimport { Button } from 'react-bootstrap';\n\nclass FlashcardContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      flashcards: [],\n      showModal: false,\n      editId: null\n    };\n\n    this.toggleModal = () => this.setState(prevState => ({\n      showModal: !prevState.showModal\n    }));\n\n    this.addFlashcard = newFlashcard => {\n      this.setState({\n        flashcards: [...this.state.flashcards, newFlashcard]\n      });\n    };\n\n    this.deleteFlashcard = id => {\n      fetch(`http://localhost:3000/api/v1/flashcards/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(resp => resp.json()).then(deletedFlashcard => {\n        const flashcards = this.state.flashcards.filter(card => card.id !== deletedFlashcard.id);\n        this.setState({\n          flashcards: flashcards\n        });\n      });\n    };\n\n    this.updateFlashcard = updatedFlashcard => {\n      const uFlashcards = this.state.flashcards.map(flashcard => {\n        if (flashcard.id === updatedFlashcard.id) {\n          return updatedFlashcard;\n        }\n\n        return flashcard;\n      });\n      this.setState({\n        flashcards: uFlashcards,\n        editId: null\n      });\n    };\n\n    this.editFlashcard = id => {\n      this.setState({\n        editId: id,\n        showModal: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/flashcards\").then(resp => resp.json()).then(flashcards => {\n      this.setState({\n        flashcards\n      });\n    });\n  }\n\n  render() {\n    const flashcardToBeEdited = this.state.editId ? this.state.flashcards.find(card => card.id === this.state.editId) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"My FlashCards\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, this.state.flashcards.map(card => {\n      if (this.props.user) {\n        if (card.user_id === this.props.user.id) {\n          return /*#__PURE__*/React.createElement(Flashcard, Object.assign({}, card, {\n            key: card.id,\n            toggleModal: this.toggleModal,\n            deleteFlashcard: this.deleteFlashcard,\n            editFlashcard: this.editFlashcard,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 40\n            }\n          }));\n        }\n      } else {\n        this.props.history.push('/Auth');\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-succes\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Create New Flashcard\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FlashcardModal, {\n      show: this.state.showModal,\n      toggleModal: this.toggleModal,\n      addFlashcard: this.addFlashcard,\n      updateFlashcard: this.updateFlashcard,\n      user: this.props.user,\n      flashcardToBeEdited: flashcardToBeEdited,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default FlashcardContainer;","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/FlashcardContainer.js"],"names":["React","Flashcard","FlashcardModal","Button","FlashcardContainer","Component","state","flashcards","showModal","editId","toggleModal","setState","prevState","addFlashcard","newFlashcard","deleteFlashcard","id","fetch","method","headers","then","resp","json","deletedFlashcard","filter","card","updateFlashcard","updatedFlashcard","uFlashcards","map","flashcard","editFlashcard","componentDidMount","render","flashcardToBeEdited","find","props","user","user_id","history","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from './Flashcard'\nimport FlashcardModal from './FlashcardModal';\nimport {Button} from 'react-bootstrap'\n\nclass FlashcardContainer extends React.Component{\n\n    // const [flashcards, setFlashcards] = useState()\n\n    state= {\n        flashcards: [],\n        showModal: false,\n        editId: null\n    }\n\n    toggleModal = () => this.setState( prevState => ({showModal:!prevState.showModal}));\n\n    addFlashcard = (newFlashcard) => {\n        this.setState({\n            flashcards: [...this.state.flashcards, newFlashcard]\n        })\n    }\n\n    deleteFlashcard = (id) =>{\n        fetch(`http://localhost:3000/api/v1/flashcards/${id}`,{\n          method:\"DELETE\",\n          headers:{\n            'Content-Type':'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(resp=>resp.json())\n        .then(deletedFlashcard => {\n            const flashcards = this.state.flashcards.filter(card=>card.id !== deletedFlashcard.id)\n            this.setState({flashcards: flashcards})\n        })\n    }\n\n    updateFlashcard = (updatedFlashcard) => {\n        const uFlashcards = this.state.flashcards.map ( flashcard =>{\n            if(flashcard.id === updatedFlashcard.id){\n                return updatedFlashcard\n            }\n            return flashcard\n        })\n\n        this.setState({\n            flashcards: uFlashcards,\n            editId: null\n        })\n    }\n\n    editFlashcard = (id) => {\n        this.setState({ \n            editId: id, \n            showModal: true})\n    }\n\n    componentDidMount(){\n\n        fetch(\"http://localhost:3000/api/v1/flashcards\")\n        .then(resp => resp.json())\n        .then(flashcards => {\n            this.setState({ flashcards })\n            }\n        )\n    }\n    render() {\n        const flashcardToBeEdited = this.state.editId ? this.state.flashcards.find(card => card.id === this.state.editId) : null;\n        return (\n            <>\n                <h1>My FlashCards</h1>\n                <div className='card-grid'>\n                    {this.state.flashcards.map(card => {\n                        if(this.props.user){\n                            if(card.user_id === this.props.user.id){\n                                return <Flashcard {...card} key={card.id} toggleModal={this.toggleModal} deleteFlashcard={this.deleteFlashcard} editFlashcard={this.editFlashcard}/>\n                            }\n                        }else{\n                            this.props.history.push('/Auth')\n                        }\n                    })}\n                </div>\n\n                <Button variant=\"outline-succes\" onClick={this.toggleModal}>Create New Flashcard</Button>\n\n                <div>\n                    <FlashcardModal \n                        show={this.state.showModal}\n                        toggleModal={this.toggleModal}\n                        addFlashcard={this.addFlashcard}\n                        updateFlashcard={this.updateFlashcard}\n                        user={this.props.user}\n                        flashcardToBeEdited={flashcardToBeEdited}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default FlashcardContainer"]},"metadata":{},"sourceType":"module"}