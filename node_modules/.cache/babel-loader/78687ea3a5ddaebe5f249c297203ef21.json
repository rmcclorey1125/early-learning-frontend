{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/FlashcardContainer.js\";\nimport React, { useState } from 'react';\nimport Flashcard from './Flashcard';\nimport FlashcardModal from './FlashcardModal'; // import {Button} from 'react-bootstrap'\n\nclass FlashcardContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      flashcards: [],\n      showModal: false\n    };\n\n    this.toggleModal = () => this.setState(prevState => ({\n      showModal: !prevState.showModal\n    }));\n\n    this.addFlashcard = newFlashcard => {\n      this.setState({\n        flashcards: [...this.state.flashcards, newFlashcard]\n      });\n    };\n\n    this.deleteFlashcard = id => {\n      fetch(`http://localhost:3000/api/v1/flashcards/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(resp => resp.json()).then(deletedFlashcard => {\n        const flashcards = this.state.flashcards.filter(card => card.id !== deletedFlashcard.id);\n        this.setState({\n          flashcards: flashcards\n        });\n      });\n    };\n  }\n\n  // updateFlashcard = (updatedFlashcard) => {\n  //     const uFlashcards = this.state.flashacards.map ( flashcard =>{\n  //         if(flashcard.id === updatedFlashcard.id){\n  //             return updatedFlashcard\n  //         }\n  //         return flashcard\n  //     })\n  // }\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/flashcards\").then(resp => resp.json()).then(flashcards => {\n      this.setState({\n        flashcards\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"My FlashCards\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, this.state.flashcards.map(card => {\n      if (card.user_id === this.props.user.id) {\n        return /*#__PURE__*/React.createElement(Flashcard, Object.assign({}, card, {\n          key: card.id,\n          toggleModal: this.toggleModal,\n          deleteFlashcard: this.deleteFlashcard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }\n        }));\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Create New Flashcard\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FlashcardModal, {\n      show: this.state.showModal,\n      toggleModal: this.toggleModal,\n      addFlashcard: this.addFlashcard,\n      updateFlashcard: this.updateFlashcard // flashcards={this.state.flashcards}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default FlashcardContainer;","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/FlashcardContainer.js"],"names":["React","useState","Flashcard","FlashcardModal","FlashcardContainer","Component","state","flashcards","showModal","toggleModal","setState","prevState","addFlashcard","newFlashcard","deleteFlashcard","id","fetch","method","headers","then","resp","json","deletedFlashcard","filter","card","componentDidMount","render","map","user_id","props","user","updateFlashcard"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Flashcard from './Flashcard'\nimport FlashcardModal from './FlashcardModal';\n// import {Button} from 'react-bootstrap'\n\nclass FlashcardContainer extends React.Component{\n\n    // const [flashcards, setFlashcards] = useState()\n\n    state= {\n        flashcards: [],\n        showModal: false\n    }\n\n    toggleModal = () => this.setState( prevState => ({showModal:!prevState.showModal}));\n\n    addFlashcard = (newFlashcard) => {\n        this.setState({\n            flashcards: [...this.state.flashcards, newFlashcard]\n        })\n    }\n\n    deleteFlashcard = (id) =>{\n        fetch(`http://localhost:3000/api/v1/flashcards/${id}`,{\n          method:\"DELETE\",\n          headers:{\n            'Content-Type':'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(resp=>resp.json())\n        .then(deletedFlashcard => {\n            const flashcards = this.state.flashcards.filter(card=>card.id !== deletedFlashcard.id)\n            this.setState({flashcards: flashcards})\n        })\n    }\n\n    // updateFlashcard = (updatedFlashcard) => {\n    //     const uFlashcards = this.state.flashacards.map ( flashcard =>{\n    //         if(flashcard.id === updatedFlashcard.id){\n    //             return updatedFlashcard\n    //         }\n    //         return flashcard\n    //     })\n    // }\n\n    componentDidMount(){\n\n        fetch(\"http://localhost:3000/api/v1/flashcards\")\n        .then(resp => resp.json())\n        .then(flashcards => {\n            this.setState({ flashcards })\n            }\n        )\n    }\n    render() {\n        return (\n            <>\n                <h1>My FlashCards</h1>\n                <div className='card-grid'>\n                    {this.state.flashcards.map(card => {\n                        if(card.user_id === this.props.user.id){\n                            return <Flashcard {...card} key={card.id} toggleModal={this.toggleModal} deleteFlashcard={this.deleteFlashcard}/>\n                        }\n                    })}\n                </div>\n\n                <button onClick={this.toggleModal}>Create New Flashcard</button>\n\n                <div>\n                    <FlashcardModal \n                        show={this.state.showModal}\n                        toggleModal={this.toggleModal}\n                        addFlashcard={this.addFlashcard}\n                        updateFlashcard={this.updateFlashcard}\n                        // flashcards={this.state.flashcards}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default FlashcardContainer"]},"metadata":{},"sourceType":"module"}