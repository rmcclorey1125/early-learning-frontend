{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js\";\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nclass Speaking extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.evaluate = (text, reading) => {\n      let t = text.toLowerCase();\n      let r = reading.toLowerCase();\n      let tParts = t.split(' ');\n      let rParts = r.split(' ');\n      console.log(rParts);\n      console.log(tParts);\n      let common = tParts.filter(word => rParts.includes(word));\n      let uncommon = rParts.filter(word => !tParts.includes(word));\n      console.log(uncommon);\n      alert(`You got ${common.length} of 26 letters correct you missed ${uncommon}`);\n    };\n  }\n\n  render() {\n    const {\n      transcript,\n      resetTranscript\n    } = useSpeechRecognition();\n\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n      return null;\n    }\n\n    const reading = transcript;\n    const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"alphabet\",\n      src: \"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => SpeechRecognition.startListening({\n        continuous: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.evaluate(reading, text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, reading));\n  }\n\n}\n\nexport default Speaking; // let length = tParts.length\n// let score = 0\n// if(tParts === rParts){\n//     score = score + 1\n// }\n// for(let i = 0; i<tParts.length; i++){\n//     if(tParts[i] !== rParts[i]){\n//         score = score - 1;\n//     } \n// }\n// alert(score) \n// Math.round(100*(score/length))","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js"],"names":["React","SpeechRecognition","useSpeechRecognition","Speaking","Component","state","evaluate","text","reading","t","toLowerCase","r","tParts","split","rParts","console","log","common","filter","word","includes","uncommon","alert","length","render","transcript","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","stopListening"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAGA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE5B,EAF4B;;AAAA,SAMnCC,QANmC,GAMxB,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC1B,UAAIC,CAAC,GAAGF,IAAI,CAACG,WAAL,EAAR;AACA,UAAIC,CAAC,GAAGH,OAAO,CAACE,WAAR,EAAR;AAEA,UAAIE,MAAM,GAAGH,CAAC,CAACI,KAAF,CAAQ,GAAR,CAAb;AACA,UAAIC,MAAM,GAAGH,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAb;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,UAAIK,MAAM,GAAGL,MAAM,CAACM,MAAP,CAAcC,IAAI,IAAIL,MAAM,CAACM,QAAP,CAAgBD,IAAhB,CAAtB,CAAb;AACA,UAAIE,QAAQ,GAAGP,MAAM,CAACI,MAAP,CAAcC,IAAI,IAAI,CAACP,MAAM,CAACQ,QAAP,CAAgBD,IAAhB,CAAvB,CAAf;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAEAC,MAAAA,KAAK,CAAE,WAAUL,MAAM,CAACM,MAAO,qCAAoCF,QAAS,EAAvE,CAAL;AACH,KAtBkC;AAAA;;AAwBnCG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAkCxB,oBAAoB,EAA5D;;AAEA,QAAI,CAACD,iBAAiB,CAAC0B,gCAAlB,EAAL,EAA2D;AACzD,aAAO,IAAP;AACD;;AACD,UAAMnB,OAAO,GAAGiB,UAAhB;AACA,UAAMlB,IAAI,GAAG,qDAAb;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,gGAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMN,iBAAiB,CAAC2B,cAAlB,CAAiC;AAAEC,QAAAA,UAAU,EAAC;AAAb,OAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAQ,MAAA,OAAO,EAAE5B,iBAAiB,CAAC6B,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKpB,QAAL,CAAcE,OAAd,EAAuBD,IAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CARJ,CADF;AAYH;;AA5CkC;;AA8CvC,eAAeL,QAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\n\nclass Speaking extends React.Component {\n    \n    state= {\n\n    }\n    \n    evaluate = (text, reading) => {\n        let t = text.toLowerCase()\n        let r = reading.toLowerCase()\n        \n        let tParts = t.split(' ')\n        let rParts = r.split(' ')\n    \n        console.log(rParts)\n        console.log(tParts)\n        \n        let common = tParts.filter(word => rParts.includes(word))\n        let uncommon = rParts.filter(word => !tParts.includes(word))\n    \n        console.log(uncommon)\n    \n        alert(`You got ${common.length} of 26 letters correct you missed ${uncommon}`)\n    }\n\n    render(){\n        const { transcript, resetTranscript } = useSpeechRecognition()\n      \n        if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n          return null\n        }\n        const reading = transcript\n        const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n        return (\n          <div>\n              <img className=\"alphabet\" src=\"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\" />\n              <br></br>\n              <button onClick={() => SpeechRecognition.startListening({ continuous:true })}>Start</button>\n              <button onClick={SpeechRecognition.stopListening}>Stop</button>\n              <button onClick={resetTranscript}>Reset</button>\n              <button onClick={() => this.evaluate(reading, text)}>Submit</button>\n      \n              <h1>{reading}</h1>\n          </div>\n        )\n    }\n}\nexport default Speaking\n\n\n    // let length = tParts.length\n    // let score = 0\n    // if(tParts === rParts){\n    //     score = score + 1\n    // }\n    // for(let i = 0; i<tParts.length; i++){\n    //     if(tParts[i] !== rParts[i]){\n    //         score = score - 1;\n    //     } \n    // }\n    // alert(score) \n    // Math.round(100*(score/length))"]},"metadata":{},"sourceType":"module"}