{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js\";\nimport React from 'react';\nimport ScoreLine from './ScoreLine';\nimport ScoreChart from './ScoreChart';\n\nconst ScoreCard = props => {\n  // let date = new Date(props.created_at);\n  // let showDate =  (date.getMonth()+1) + '-'+ date.getDate() + '-' + date.getFullYear()\n  // let noticeQuiz\n  // let noticeAlpha\n  // let noticePuz\n  // if(props.game_type === \"Quiz\"){\n  //     noticeQuiz = `On ${showDate}, you got ${((props.score/5)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n  // }else if(props.game_type === \"Alphabet\"){\n  //     noticeAlpha = `On ${showDate}, you got ${((props.score/26)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n  // }else if(props.game_type === \"Puzzle\"){\n  //     noticePuz = `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.`\n  // }\n  // -----------------------------------------------------------------------------------------\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notice-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Quiz Scores\"), /*#__PURE__*/React.createElement(ScoreLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Alphabet Scores\"), /*#__PURE__*/React.createElement(ScoreLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Puzzle Scores\"), /*#__PURE__*/React.createElement(ScoreLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }))));\n}; // if(props.game_type === \"Quiz\"){\n//     return (\n//         <>\n//         <div className=\"notice-container\">\n//             <div className=\"notice\">\n//                 <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//             </div>\n//         </div>  \n//         </>\n//     )\n// }else if(props.game_type === \"Alphabet\"){\n//     return (\n//         <>\n//         <div className=\"notice-container\">\n//             <div className=\"notice\">\n//                 <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//             </div>\n//         </div>  \n//         </>\n//     )\n// }else if(props.game_type === \"Puzzle\"){\n//     return (\n//         <>\n//         <div className=\"notice-container\">\n//             <div className=\"notice\">\n//                 <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n//             </div>\n//         </div>  \n//         </>\n//     )\n// }\n\n\nexport default ScoreCard; // if(props.game_type === \"Quiz\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Alphabet\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Puzzle\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }\n// return(\n//     <>\n//         <div className=\"notice-container\">\n//             <div className=\"notices\">\n//                 <h1>Quiz Scores</h1>\n//                 <p>{props.game_type === \"Quiz\"? `On ${showDate}, you got ${((props.score/5)*100).toFixed(2)}% correct in the ${props.game_type} game.` : null}</p>\n//             </div>\n//             <div className=\"notices\">\n//                 <h1>Alphabet Scores</h1>\n//                 <p>{props.game_type === \"Alphabet\"? `On ${showDate}, you got ${((props.score/26)*100).toFixed(2)}% correct in the ${props.game_type} game.` : null} </p>\n//             </div>\n//             <div className=\"notices\">\n//                 <h1>Puzzle Scores</h1>\n//                 <p>{props.game_type === \"Puzzle\"? `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.` : null} </p>\n//             </div>\n//         </div>\n//     </>","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js"],"names":["React","ScoreLine","ScoreChart","ScoreCard","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEG,sBACK,uDACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,CADJ,CADL;AAkBF,CApCD,C,CAsCI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKJ,eAAeD,SAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport ScoreLine from './ScoreLine'\nimport ScoreChart from './ScoreChart'\n\nconst ScoreCard = (props) => {\n\n    // let date = new Date(props.created_at);\n    // let showDate =  (date.getMonth()+1) + '-'+ date.getDate() + '-' + date.getFullYear()\n    // let noticeQuiz\n    // let noticeAlpha\n    // let noticePuz\n\n    // if(props.game_type === \"Quiz\"){\n    //     noticeQuiz = `On ${showDate}, you got ${((props.score/5)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n    // }else if(props.game_type === \"Alphabet\"){\n    //     noticeAlpha = `On ${showDate}, you got ${((props.score/26)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n    // }else if(props.game_type === \"Puzzle\"){\n    //     noticePuz = `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.`\n    // }\n    \n// -----------------------------------------------------------------------------------------\n\n   return(\n        <>\n            <div className=\"notice-container\">\n                <div className=\"notices\">\n                    <h1>Quiz Scores</h1>\n                    <ScoreLine />\n                </div>\n                <div className=\"notices\">\n                    <h1>Alphabet Scores</h1>\n                    <ScoreLine />\n                </div>\n                <div className=\"notices\">\n                    <h1>Puzzle Scores</h1>\n                    <ScoreLine />\n                </div>\n            </div>\n        </>\n   )\n}\n\n    // if(props.game_type === \"Quiz\"){\n    //     return (\n    //         <>\n    //         <div className=\"notice-container\">\n    //             <div className=\"notice\">\n    //                 <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //             </div>\n    //         </div>  \n    //         </>\n    //     )\n    // }else if(props.game_type === \"Alphabet\"){\n    //     return (\n    //         <>\n    //         <div className=\"notice-container\">\n    //             <div className=\"notice\">\n    //                 <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //             </div>\n    //         </div>  \n    //         </>\n    //     )\n    // }else if(props.game_type === \"Puzzle\"){\n    //     return (\n    //         <>\n    //         <div className=\"notice-container\">\n    //             <div className=\"notice\">\n    //                 <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n    //             </div>\n    //         </div>  \n    //         </>\n    //     )\n    // }\n   \n\n\n\nexport default ScoreCard\n\n\n    // if(props.game_type === \"Quiz\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Alphabet\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Puzzle\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }\n\n    // return(\n    //     <>\n    //         <div className=\"notice-container\">\n    //             <div className=\"notices\">\n    //                 <h1>Quiz Scores</h1>\n    //                 <p>{props.game_type === \"Quiz\"? `On ${showDate}, you got ${((props.score/5)*100).toFixed(2)}% correct in the ${props.game_type} game.` : null}</p>\n    //             </div>\n    //             <div className=\"notices\">\n    //                 <h1>Alphabet Scores</h1>\n    //                 <p>{props.game_type === \"Alphabet\"? `On ${showDate}, you got ${((props.score/26)*100).toFixed(2)}% correct in the ${props.game_type} game.` : null} </p>\n    //             </div>\n    //             <div className=\"notices\">\n    //                 <h1>Puzzle Scores</h1>\n    //                 <p>{props.game_type === \"Puzzle\"? `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.` : null} </p>\n    //             </div>\n    //         </div>\n    //     </>\n\n"]},"metadata":{},"sourceType":"module"}