{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js\";\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst evaluate = (text, reading) => {\n  let t = text.toLowerCase();\n  let r = reading.toLowerCase();\n  let tParts = t.split(' ');\n  let rParts = r.split(' ');\n  console.log(rParts);\n  console.log(tParts);\n  let common = tParts.filter(word => rParts.includes(word));\n  let uncommon = tParts.filter(word => tParts.indexOf(word) === -1);\n  alert(`You got ${common.length} of 26 letters correct you missed ${uncommon.length}`); // let length = tParts.length\n  // let score = 0\n  // if(tParts === rParts){\n  //     score = score + 1\n  // }\n  // for(let i = 0; i<tParts.length; i++){\n  //     if(tParts[i] !== rParts[i]){\n  //         score = score - 1;\n  //     } \n  // }\n  // alert(score) \n  // Math.round(100*(score/length))\n};\n\nconst Speaking = () => {\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  const reading = transcript;\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"alphabet\",\n    src: \"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SpeechRecognition.startListening({\n      continuous: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SpeechRecognition.stopListening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => evaluate(reading, text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, reading));\n};\n\nexport default Speaking;","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js"],"names":["React","SpeechRecognition","useSpeechRecognition","evaluate","text","reading","t","toLowerCase","r","tParts","split","rParts","console","log","common","filter","word","includes","uncommon","indexOf","alert","length","Speaking","transcript","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","stopListening"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAEA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAChC,MAAIC,CAAC,GAAGF,IAAI,CAACG,WAAL,EAAR;AACA,MAAIC,CAAC,GAAGH,OAAO,CAACE,WAAR,EAAR;AAEA,MAAIE,MAAM,GAAGH,CAAC,CAACI,KAAF,CAAQ,GAAR,CAAb;AACA,MAAIC,MAAM,GAAGH,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAb;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,MAAIK,MAAM,GAAGL,MAAM,CAACM,MAAP,CAAcC,IAAI,IAAIL,MAAM,CAACM,QAAP,CAAgBD,IAAhB,CAAtB,CAAb;AACA,MAAIE,QAAQ,GAAGT,MAAM,CAACM,MAAP,CAAcC,IAAI,IAAIP,MAAM,CAACU,OAAP,CAAeH,IAAf,MAAuB,CAAC,CAA9C,CAAf;AAGAI,EAAAA,KAAK,CAAE,WAAUN,MAAM,CAACO,MAAO,qCAAoCH,QAAQ,CAACG,MAAO,EAA9E,CAAL,CAdgC,CAehC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA3BD;;AA6BA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCtB,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACwB,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD;;AACD,QAAMpB,OAAO,GAAGkB,UAAhB;AACA,QAAMnB,IAAI,GAAG,qDAAb;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAC,gGAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMH,iBAAiB,CAACyB,cAAlB,CAAiC;AAAEC,MAAAA,UAAU,EAAC;AAAb,KAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAQ,IAAA,OAAO,EAAE1B,iBAAiB,CAAC2B,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,IAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAQ,IAAA,OAAO,EAAE,MAAMrB,QAAQ,CAACE,OAAD,EAAUD,IAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,OAAL,CARJ,CADF;AAYD,CApBD;;AAqBA,eAAeiB,QAAf","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\nconst evaluate = (text, reading) => {\n    let t = text.toLowerCase()\n    let r = reading.toLowerCase()\n    \n    let tParts = t.split(' ')\n    let rParts = r.split(' ')\n\n    console.log(rParts)\n    console.log(tParts)\n\n    let common = tParts.filter(word => rParts.includes(word))\n    let uncommon = tParts.filter(word => tParts.indexOf(word)===-1)\n\n\n    alert(`You got ${common.length} of 26 letters correct you missed ${uncommon.length}`)\n    // let length = tParts.length\n    // let score = 0\n    // if(tParts === rParts){\n    //     score = score + 1\n    // }\n    // for(let i = 0; i<tParts.length; i++){\n    //     if(tParts[i] !== rParts[i]){\n    //         score = score - 1;\n    //     } \n    // }\n    // alert(score) \n    // Math.round(100*(score/length))\n}\n\nconst Speaking = () => {\n  const { transcript, resetTranscript } = useSpeechRecognition()\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null\n  }\n  const reading = transcript\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n  return (\n    <div>\n        <img className=\"alphabet\" src=\"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\" />\n        <br></br>\n        <button onClick={() => SpeechRecognition.startListening({ continuous:true })}>Start</button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n        <button onClick={() => evaluate(reading, text)}>Submit</button>\n\n        <h1>{reading}</h1>\n    </div>\n  )\n}\nexport default Speaking"]},"metadata":{},"sourceType":"module"}