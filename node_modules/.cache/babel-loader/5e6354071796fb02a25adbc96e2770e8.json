{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js\";\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst Speaking = props => {\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  const reading = transcript;\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"alphabet\",\n    src: \"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SpeechRecognition.startListening({\n      continuous: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SpeechRecognition.stopListening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.evaluate(reading, text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, reading));\n};\n\nexport default Speaking; // let length = tParts.length\n// let score = 0\n// if(tParts === rParts){\n//     score = score + 1\n// }\n// for(let i = 0; i<tParts.length; i++){\n//     if(tParts[i] !== rParts[i]){\n//         score = score - 1;\n//     } \n// }\n// alert(score) \n// Math.round(100*(score/length))","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js"],"names":["React","SpeechRecognition","useSpeechRecognition","Speaking","props","transcript","resetTranscript","browserSupportsSpeechRecognition","reading","text","startListening","continuous","stopListening","evaluate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCJ,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACM,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD;;AACD,QAAMC,OAAO,GAAGH,UAAhB;AACA,QAAMI,IAAI,GAAG,qDAAb;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAC,gGAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMR,iBAAiB,CAACS,cAAlB,CAAiC;AAAEC,MAAAA,UAAU,EAAC;AAAb,KAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAQ,IAAA,OAAO,EAAEV,iBAAiB,CAACW,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,IAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAQ,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACS,QAAN,CAAeL,OAAf,EAAwBC,IAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CARJ,CADF;AAYD,CApBD;;AAqBA,eAAeL,QAAf,C,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\n\n\nconst Speaking = (props) => {\n  const { transcript, resetTranscript } = useSpeechRecognition()\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null\n  }\n  const reading = transcript\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n  return (\n    <div>\n        <img className=\"alphabet\" src=\"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\" />\n        <br></br>\n        <button onClick={() => SpeechRecognition.startListening({ continuous:true })}>Start</button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n        <button onClick={() => props.evaluate(reading, text)}>Submit</button>\n\n        <h1>{reading}</h1>\n    </div>\n  )\n}\nexport default Speaking\n\n    // let length = tParts.length\n    // let score = 0\n    // if(tParts === rParts){\n    //     score = score + 1\n    // }\n    // for(let i = 0; i<tParts.length; i++){\n    //     if(tParts[i] !== rParts[i]){\n    //         score = score - 1;\n    //     } \n    // }\n    // alert(score) \n    // Math.round(100*(score/length))"]},"metadata":{},"sourceType":"module"}