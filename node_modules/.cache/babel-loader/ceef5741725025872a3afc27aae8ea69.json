{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js\";\nimport React from 'react';\nimport ScoreChart from './ScoreChart';\n\nconst ScoreCard = props => {\n  let date = new Date(props.created_at);\n  let showDate = date.getMonth() + 1 + '-' + date.getDate() + '-' + date.getFullYear();\n  let noticeQuiz;\n  let noticeAlpha;\n  let noticePuz;\n\n  if (props.game_type === \"Quiz\") {\n    noticeQuiz = `On ${showDate}, you got ${(props.score / 5 * 100).toFixed(2)}% correct in the ${props.game_type} game.`;\n  } else if (props.game_type === \"Alphabet\") {\n    noticeAlpha = `On ${showDate}, you got ${(props.score / 26 * 100).toFixed(2)}% correct in the ${props.game_type} game.`;\n  } else if (props.game_type === \"Puzzle\") {\n    noticePuz = `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.`;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notice-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, noticeQuiz), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, noticeAlpha), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, noticePuz)));\n};\n\nexport default ScoreCard; // if(props.game_type === \"Quiz\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Alphabet\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }else if(props.game_type === \"Puzzle\"){\n//     return (\n//         <>\n//         <div>\n//             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n//         </div>  \n//         <button>ABC</button>\n//         </>\n//     )\n// }","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/Github/early-learning-frontend/src/ScoreCard.js"],"names":["React","ScoreChart","ScoreCard","props","date","Date","created_at","showDate","getMonth","getDate","getFullYear","noticeQuiz","noticeAlpha","noticePuz","game_type","score","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,UAAf,CAAX;AACA,MAAIC,QAAQ,GAAKH,IAAI,CAACI,QAAL,KAAgB,CAAjB,GAAsB,GAAtB,GAA2BJ,IAAI,CAACK,OAAL,EAA3B,GAA4C,GAA5C,GAAkDL,IAAI,CAACM,WAAL,EAAlE;AACA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,SAAJ;;AAEA,MAAGV,KAAK,CAACW,SAAN,KAAoB,MAAvB,EAA8B;AAC1BH,IAAAA,UAAU,GAAI,MAAKJ,QAAS,aAAY,CAAEJ,KAAK,CAACY,KAAN,GAAY,CAAb,GAAgB,GAAjB,EAAsBC,OAAtB,CAA8B,CAA9B,CAAiC,oBAAmBb,KAAK,CAACW,SAAU,QAA5G;AACH,GAFD,MAEM,IAAGX,KAAK,CAACW,SAAN,KAAoB,UAAvB,EAAkC;AACpCF,IAAAA,WAAW,GAAI,MAAKL,QAAS,aAAY,CAAEJ,KAAK,CAACY,KAAN,GAAY,EAAb,GAAiB,GAAlB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAkC,oBAAmBb,KAAK,CAACW,SAAU,QAA9G;AACH,GAFK,MAEA,IAAGX,KAAK,CAACW,SAAN,KAAoB,QAAvB,EAAgC;AAClCD,IAAAA,SAAS,GAAI,MAAKN,QAAS,uBAAsBJ,KAAK,CAACW,SAAU,YAAWX,KAAK,CAACY,KAAM,WAAxF;AACH;;AAED,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,UAA1B,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,WAA1B,CAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,SAA1B,CAHJ,CADJ,CADJ;AAUH,CA1BD;;AA4BA,eAAeX,SAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport ScoreChart from './ScoreChart'\n\nconst ScoreCard = (props) => {\n\n    let date = new Date(props.created_at);\n    let showDate =  (date.getMonth()+1) + '-'+ date.getDate() + '-' + date.getFullYear()\n    let noticeQuiz\n    let noticeAlpha\n    let noticePuz\n\n    if(props.game_type === \"Quiz\"){\n        noticeQuiz = `On ${showDate}, you got ${((props.score/5)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n    }else if(props.game_type === \"Alphabet\"){\n        noticeAlpha = `On ${showDate}, you got ${((props.score/26)*100).toFixed(2)}% correct in the ${props.game_type} game.`\n    }else if(props.game_type === \"Puzzle\"){\n        noticePuz = `On ${showDate}, you completed the ${props.game_type} game in ${props.score} seconds.`\n    }\n\n    return(\n        <>\n            <div className=\"notice-container\">\n                <div className=\"notices\">{noticeQuiz}</div>\n                <div className=\"notices\">{noticeAlpha}</div>\n                <div className=\"notices\">{noticePuz}</div>\n            </div>\n        </>\n)\n\n}\n\nexport default ScoreCard\n\n\n    // if(props.game_type === \"Quiz\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/5)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Alphabet\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you got {((props.score/26)*100).toFixed(2)}% correct in the {props.game_type} game.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }else if(props.game_type === \"Puzzle\"){\n    //     return (\n    //         <>\n    //         <div>\n    //             <p>On {showDate}, you completed the {props.game_type} game in {props.score} seconds.</p>\n    //         </div>  \n    //         <button>ABC</button>\n    //         </>\n    //     )\n    // }"]},"metadata":{},"sourceType":"module"}