{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js\";\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst Speaking = props => {\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  const reading = transcript;\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\";\n\n  if (props.abcEnd) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"End \", props.abcWrong.map(letter => letter)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: props.endAbc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.history.push(``);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Return Home\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"alphabet\",\n      src: \"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => SpeechRecognition.startListening({\n        continuous: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.evaluate(reading, text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, reading));\n  }\n};\n\nexport default Speaking; // let length = tParts.length\n// let score = 0\n// if(tParts === rParts){\n//     score = score + 1\n// }\n// for(let i = 0; i<tParts.length; i++){\n//     if(tParts[i] !== rParts[i]){\n//         score = score - 1;\n//     } \n// }\n// alert(score) \n// Math.round(100*(score/length))","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/Speaking.js"],"names":["React","SpeechRecognition","useSpeechRecognition","Speaking","props","transcript","resetTranscript","browserSupportsSpeechRecognition","reading","text","abcEnd","abcWrong","map","letter","endAbc","history","push","startListening","continuous","stopListening","evaluate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCJ,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACM,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD;;AACD,QAAMC,OAAO,GAAGH,UAAhB;AACA,QAAMI,IAAI,GAAG,qDAAb;;AAEA,MAAGL,KAAK,CAACM,MAAT,EAAgB;AACZ,wBACI,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBC,MAAM,IAAIA,MAA7B,CAAT,CADF,eAEE;AAAQ,MAAA,OAAO,EAAET,KAAK,CAACU,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAyB,EAAzB;AAA4B,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADJ;AAOH,GARD,MAQO;AACH,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,gGAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMf,iBAAiB,CAACgB,cAAlB,CAAiC;AAAEC,QAAAA,UAAU,EAAC;AAAb,OAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAQ,MAAA,OAAO,EAAEjB,iBAAiB,CAACkB,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEb,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACgB,QAAN,CAAeZ,OAAf,EAAwBC,IAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAL,CARJ,CADF;AAYH;AAEF,CAhCD;;AAiCA,eAAeL,QAAf,C,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\nconst Speaking = (props) => {\n  const { transcript, resetTranscript } = useSpeechRecognition()\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null\n  }\n  const reading = transcript\n  const text = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n\n  if(props.abcEnd){\n      return (\n          <>\n            <h1>End {props.abcWrong.map(letter => letter, )}</h1>\n            <button onClick={props.endAbc}>Play Again</button>\n            <button onClick={()=>{this.props.history.push(``)}}>Return Home</button>\n          </>\n      )\n  } else {\n      return (\n        <div>\n            <img className=\"alphabet\" src=\"https://www.english-learn-online.com/wp-content/uploads/alphabet-featured-1230x660-696x373.jpg\" />\n            <br></br>\n            <button onClick={() => SpeechRecognition.startListening({ continuous:true })}>Start</button>\n            <button onClick={SpeechRecognition.stopListening}>Stop</button>\n            <button onClick={resetTranscript}>Reset</button>\n            <button onClick={() => props.evaluate(reading, text)}>Submit</button>\n    \n            <h1>{reading}</h1>\n        </div>\n      )\n  }\n\n}\nexport default Speaking\n\n    // let length = tParts.length\n    // let score = 0\n    // if(tParts === rParts){\n    //     score = score + 1\n    // }\n    // for(let i = 0; i<tParts.length; i++){\n    //     if(tParts[i] !== rParts[i]){\n    //         score = score - 1;\n    //     } \n    // }\n    // alert(score) \n    // Math.round(100*(score/length))"]},"metadata":{},"sourceType":"module"}