{"ast":null,"code":"var _jsxFileName = \"/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/MultipleChoice.js\";\nimport React from 'react';\nconst API = 'http://localhost:3000/api/v1/questions';\n\nclass MultipleChoice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      userAnswer: null,\n      currentIndex: 0,\n      options: [],\n      quizEnd: false,\n      score: 0,\n      disabled: true\n    };\n\n    this.nextQuestionHandler = () => {\n      const {\n        userAnswer,\n        answer,\n        score\n      } = this.state;\n\n      if (userAnswer === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        currentIndex: this.state.currentIndex + 1,\n        userAnswer: null\n      });\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        userAnswer: answer,\n        disabled: false\n      });\n    };\n\n    this.finishHandler = () => {\n      const {\n        userAnswer,\n        answer,\n        score\n      } = this.state;\n\n      if (userAnswer === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      if (this.state.currentIndex === this.state.questions.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentIndex\n    } = this.state;\n    fetch(API).then(resp => resp.json()).then(questions => {\n      this.setState({\n        questions: questions,\n        question: questions[currentIndex].question,\n        options: questions[currentIndex].options,\n        answer: questions[currentIndex].answer\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentIndex != prevState.currentIndex) {\n      this.setState(() => {\n        return {\n          question: this.state.questions[this.state.currentIndex].question,\n          options: this.state.questions[this.state.currentIndex].options,\n          answer: this.state.questions[this.state.currentIndex].answer\n        };\n      });\n    }\n  }\n\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      userAnswer,\n      quizEnd,\n      score\n    } = this.state;\n\n    if (quizEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"You answered \", score, \" out of \", this.state.questions.length, \" correct\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.props.history.push(``);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Return Home\"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \"Play Again\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, question), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, `Question ${currentIndex + 1} of ${this.state.questions.length}`), options.map(option => /*#__PURE__*/React.createElement(\"p\", {\n        key: option.id,\n        className: `options ${userAnswer === option ? \"selected\" : null}`,\n        onClick: () => this.checkAnswer(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: option,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, currentIndex < this.state.questions.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        disabled: this.state.disabled,\n        onClick: this.nextQuestionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Next Question\"), currentIndex === this.state.questions.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        disabled: this.state.disabled,\n        onClick: this.finishHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Submit\")));\n    }\n  }\n\n}\n\nexport default MultipleChoice;","map":{"version":3,"sources":["/Users/ronan/Flatiron/code/Mod5/Final-Project/early-learning-frontend/src/MultipleChoice.js"],"names":["React","API","MultipleChoice","Component","state","questions","userAnswer","currentIndex","options","quizEnd","score","disabled","nextQuestionHandler","answer","setState","checkAnswer","finishHandler","length","componentDidMount","fetch","then","resp","json","question","componentDidUpdate","prevProps","prevState","render","props","history","push","map","option","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,wCAAZ;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,YAAY,EAAE,CAHV;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,KAAK,EAAE,CANH;AAOJC,MAAAA,QAAQ,EAAE;AAPN,KAFiC;;AAAA,SA0BzCC,mBA1ByC,GA0BnB,MAAM;AACxB,YAAM;AAACN,QAAAA,UAAD;AAAaO,QAAAA,MAAb;AAAqBH,QAAAA;AAArB,UAA8B,KAAKN,KAAzC;;AAEA,UAAGE,UAAU,KAAKO,MAAlB,EAAyB;AACrB,aAAKC,QAAL,CAAe;AACXJ,UAAAA,KAAK,EAAEA,KAAK,GAAG;AADJ,SAAf;AAGH;;AAED,WAAKI,QAAL,CAAc;AACVP,QAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWG,YAAX,GAA0B,CAD9B;AAEVD,QAAAA,UAAU,EAAE;AAFF,OAAd;AAIH,KAvCwC;;AAAA,SA0CzCS,WA1CyC,GA0C3BF,MAAM,IAAI;AACpB,WAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAEO,MADF;AAEVF,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KA/CwC;;AAAA,SA6DzCK,aA7DyC,GA6DzB,MAAM;AAClB,YAAM;AAACV,QAAAA,UAAD;AAAaO,QAAAA,MAAb;AAAqBH,QAAAA;AAArB,UAA8B,KAAKN,KAAzC;;AAEA,UAAGE,UAAU,KAAKO,MAAlB,EAAyB;AACrB,aAAKC,QAAL,CAAe;AACXJ,UAAAA,KAAK,EAAEA,KAAK,GAAG;AADJ,SAAf;AAGH;;AAED,UAAG,KAAKN,KAAL,CAAWG,YAAX,KAA4B,KAAKH,KAAL,CAAWC,SAAX,CAAqBY,MAArB,GAA8B,CAA7D,EAA+D;AAC3D,aAAKH,QAAL,CAAc;AACVL,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH;AACJ,KA3EwC;AAAA;;AAYzCS,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACX,MAAAA;AAAD,QAAiB,KAAKH,KAA5B;AACAe,IAAAA,KAAK,CAAClB,GAAD,CAAL,CACCmB,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMf,SAAS,IAAI;AACjB,WAAKS,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAEA,SADC;AAEZkB,QAAAA,QAAQ,EAAElB,SAAS,CAACE,YAAD,CAAT,CAAwBgB,QAFtB;AAGZf,QAAAA,OAAO,EAAEH,SAAS,CAACE,YAAD,CAAT,CAAwBC,OAHrB;AAIZK,QAAAA,MAAM,EAAER,SAAS,CAACE,YAAD,CAAT,CAAwBM;AAJpB,OAAd;AAMD,KATD;AAUH;;AAyBDW,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAG,KAAKtB,KAAL,CAAWG,YAAX,IAA2BmB,SAAS,CAACnB,YAAxC,EAAqD;AACjD,WAAKO,QAAL,CAAc,MAAM;AAChB,eAAO;AACHS,UAAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWG,YAAhC,EAA8CgB,QADrD;AAEHf,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWG,YAAhC,EAA8CC,OAFpD;AAGHK,UAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWG,YAAhC,EAA8CM;AAHnD,SAAP;AAKH,OAND;AAOH;AACJ;;AAkBDc,EAAAA,MAAM,GAAG;AACL,UAAM;AAACJ,MAAAA,QAAD;AAAWf,MAAAA,OAAX;AAAoBD,MAAAA,YAApB;AAAkCD,MAAAA,UAAlC;AAA8CG,MAAAA,OAA9C;AAAuDC,MAAAA;AAAvD,QAAgE,KAAKN,KAA3E;;AACA,QAAGK,OAAH,EAAY;AACR,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkBC,KAAlB,cAAiC,KAAKN,KAAL,CAAWC,SAAX,CAAqBY,MAAtD,aADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKW,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,EAAzB;AAA4B,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ;AAOH,KARD,MAQO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,QAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,YAAWhB,YAAY,GAAG,CAAE,OAAM,KAAKH,KAAL,CAAWC,SAAX,CAAqBY,MAAO,EAAnE,CAFJ,EAIQT,OAAO,CAACuB,GAAR,CAAYC,MAAM,iBACd;AAAG,QAAA,GAAG,EAAIA,MAAM,CAACC,EAAjB;AAAqB,QAAA,SAAS,EAAG,WAAU3B,UAAU,KAAK0B,MAAf,GAAuB,UAAvB,GAAmC,IAAK,EAAnF;AACA,QAAA,OAAO,EAAI,MAAM,KAAKjB,WAAL,CAAiBiB,MAAjB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAJR,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKzB,YAAY,GAAG,KAAKH,KAAL,CAAWC,SAAX,CAAqBY,MAArB,GAA8B,CAA7C,iBACD;AAAQ,QAAA,QAAQ,EAAI,KAAKb,KAAL,CAAWO,QAA/B;AAAyC,QAAA,OAAO,EAAE,KAAKC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAKKL,YAAY,KAAK,KAAKH,KAAL,CAAWC,SAAX,CAAqBY,MAArB,GAA8B,CAA/C,iBACD;AAAQ,QAAA,QAAQ,EAAI,KAAKb,KAAL,CAAWO,QAA/B;AAAyC,QAAA,OAAO,EAAE,KAAKK,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CAXJ,CADJ;AAyBH;AACJ;;AAlHwC;;AAqH7C,eAAed,cAAf","sourcesContent":["import React from 'react'\n\nconst API = 'http://localhost:3000/api/v1/questions'\n\nclass MultipleChoice extends React.Component {\n\n    state = {\n        questions: [],\n        userAnswer: null,\n        currentIndex: 0,\n        options: [],\n        quizEnd: false,\n        score: 0,\n        disabled: true\n    }\n\n    componentDidMount(){\n        const {currentIndex} = this.state\n        fetch(API)\n        .then(resp => resp.json())\n        .then(questions => {\n          this.setState({\n            questions: questions,\n            question: questions[currentIndex].question,\n            options: questions[currentIndex].options,\n            answer: questions[currentIndex].answer\n            })\n        })\n    }\n\n    nextQuestionHandler = () => {\n        const {userAnswer, answer, score} = this.state\n    \n        if(userAnswer === answer){\n            this.setState ({\n                score: score + 1\n            })\n        }\n    \n        this.setState({\n            currentIndex: this.state.currentIndex + 1,\n            userAnswer: null\n        })\n    }\n\n    \n    checkAnswer = answer => {\n        this.setState({\n            userAnswer: answer,\n            disabled: false\n        })\n    }\n    \n    componentDidUpdate(prevProps, prevState){\n        if(this.state.currentIndex != prevState.currentIndex){\n            this.setState(() => {\n                return {\n                    question: this.state.questions[this.state.currentIndex].question,\n                    options: this.state.questions[this.state.currentIndex].options,\n                    answer: this.state.questions[this.state.currentIndex].answer\n                }\n            })\n        }\n    }\n    \n    finishHandler = () => {\n        const {userAnswer, answer, score} = this.state\n        \n        if(userAnswer === answer){\n            this.setState ({\n                score: score + 1\n            })\n        }\n    \n        if(this.state.currentIndex === this.state.questions.length - 1){\n            this.setState({\n                quizEnd:true\n            })\n        }\n    }\n    \n    render() {\n        const {question, options, currentIndex, userAnswer, quizEnd, score} = this.state\n        if(quizEnd) {\n            return (\n                <div>\n                    <h2>You answered {score} out of {this.state.questions.length} correct</h2>\n                    <button onClick={()=>{this.props.history.push(``)}}>Return Home</button>\n                    <button>Play Again</button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2>{question}</h2>\n                    <p>{`Question ${currentIndex + 1} of ${this.state.questions.length}`}</p>\n                    {\n                        options.map(option => \n                            <p key = {option.id} className={`options ${userAnswer === option? \"selected\": null}`}\n                            onClick = {() => this.checkAnswer(option)}>\n                                <img src={option} />\n                            </p>\n                        )\n                    }\n                    <div>\n                        {currentIndex < this.state.questions.length - 1 &&\n                        <button disabled = {this.state.disabled} onClick={this.nextQuestionHandler}>\n                            Next Question\n                        </button>}\n                        {currentIndex === this.state.questions.length - 1 && \n                        <button disabled = {this.state.disabled} onClick={this.finishHandler}>\n                            Submit\n                        </button>\n                        }\n                    </div>\n                </div> \n            );\n        }\n    }\n}\n\nexport default MultipleChoice\n\n"]},"metadata":{},"sourceType":"module"}